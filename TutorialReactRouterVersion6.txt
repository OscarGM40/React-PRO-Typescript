					  REACT ROUTER DOM VERSION 6 BY FAZT

Source: https://www.youtube.com/watch?v=7xRVnmWcTE8

React Router Dom es un paquete de React que nos permite crear un enrutador en nuestra aplicación.Básicamente un enrutador me permite crear URLs,dividiendo mi aplicación como si fueran distintas páginas.

Sin embargo,dado que React o Angular son SPA esto es una simulación,realmente mi aplicación no tiene distintas páginas,es sólo una.

La versión 6 ha sido un breaking change,un cambio brusco desde la 5.

Para agregar rutas hijas tendría que usar esta estructura:
<Route path="/" element={<App />} >
  <Route path="sales" element={ <Sales /> } >
    <Route path="invoices element={ <Invoices /> } >
      <Route path=":invoice" element={ <Invoice /> } />
    </Route>
  </Route>
</Route>

Fijate que he mezclado self-closing con etiquetas normales.Cada elemento que se declara hijo de otro significa un nivel más en la url.Es decir que la url que estaría creando con este ejercicio sería dominio.com/sales/invoices/65kkht454jk4 

Ya veremos esto más adelante.Creemos el proyecto e instalemos react-router-dom.
IMPORTANTE: react-router se puede usar con React Native y otros frameworks,pero como yo voy a crear una app en el DOM,es decir en el navegador mi paquete se llama react-router-dom y no react-router a secas.
>npm i react-router-dom.

				USANDO EL ROUTER DE REACT-ROUTER-DOM

STEP ONE: BROWSERROUTER
Para poder empezar a usar este enrutador lo primero es englobar toda la app en él.Mucha gente lo renombre,en este proyecto no lo haremos:

import { BrowserRouter , Route, NavLink } from 'react-router-dom'

function App() {
  return (
    <BrowserRouter>
    	<h1>Hello world</h1>
    </BrowserRouter>
  );
}
Sin embargo,esto sólo habilita la navegación,pero nada más,cualquier ruta que escriba me devuelve lo mismo.


STEP TWO: ROUTES(former Switch) and ROUTE

Para poder cambiar de página y que devuelva un componente concreto está el componente Route.
Route permite definir una ruta,crear una ruta, y que al visitar esa ruta(URL) se muestre un componente concreto.

Route recibe dos parámetros,el primero es path y es un string con el nombre de la ruta que quiero crear,el segundo es element(antes era component).Element me permite definir el componente a mostrar en esa ruta creada

function App() {
  return (
    <BrowserRouter>
      <Route path="/" element={
        <div>Hola mundo</div>
      } />
    
    </BrowserRouter>
  );

Sin embargo,veo que me da fallo.Esto es porque tengo que usar el componente <Routes>(antes Switch).Es el intercambiador de rutas,necesario también para que se pueda cambiar entre rutas.Genial.


function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={
          <div>Hola mundo</div>
        } />
      </Routes>
    </BrowserRouter>
  );
}
}
Fijate que element me permite includo devolver HTML,claro que normalmente se referencia a un componente entero.

ELEMENT VS COMPONENT:
En la versión 6 ya no puedo devolve el nombre del componente sino que tengo que devolverlo como una tag HTML.Además se usa element y no component:
import HomePage from './pages/HomePage'
import AboutPage from './pages/AboutPage'

function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={ <HomePage /> } />
        <Route path="/about" element={ <AboutPage /> } />
      </Routes>
    </BrowserRouter>
  );
}
YA no puedo usar element={HomePage} <- debo usar JSX con una tag.

RUTA NOT FOUND:
Es muy posible que el usuario de mi aplicación navege a una ruta que no existe en  mi aplicación.Para ello se usa el comodín '*' que significa cualquier ruta.

function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={ <HomePage /> } />
        <Route path="/about" element={ <AboutPage /> } />
        <Route path="/users" element={<UsersPage />} />
        <Route path="*" element={<NotFoundPage /> } />
      </Routes>
    </BrowserRouter>
Recuerda que ahora es obligatorio,y no opcional,devolver el componente como una tag.Bien,pero como podemos navegar entre rutas?El usuario va a necesitar una forma de navegar entre rutas..
La forma de solucionar esto es colocar una navegación interna en nuestra aplicación.

COMPONENTE NAVLINK Minuto 21

